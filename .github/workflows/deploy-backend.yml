name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'infrastructure/task-definitions/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'infrastructure/task-definitions/**'

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: words-wall-backend
  ECS_CLUSTER: words-wall-production-cluster
  ECS_SERVICE: words-wall-backend-service
  TASK_DEFINITION_FAMILY: words-wall-backend-task

jobs:
  deploy:
    name: Deploy Backend to ECS
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build Docker image with correct architecture for AWS Fargate
        cd backend
        docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Push images
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: infrastructure/task-definitions/backend-task-definition.json
        container-name: words-wall-backend
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Check deployment status
      run: |
        echo "ðŸŽ‰ Backend deployment completed!"
        echo "Image: ${{ steps.build-image.outputs.image }}"
        echo "Task Definition: ${{ steps.task-def.outputs.task-definition }}"
        
        # Show recent logs
        echo "ðŸ“‹ Recent logs:"
        aws logs tail /ecs/words-wall-backend --since 5m | tail -10 || echo "No recent logs available"