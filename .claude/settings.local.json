{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(yarn install)",
      "Bash(yarn add rxjs)",
      "Bash(yarn build)",
      "Bash(yarn dev)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(PORT=3000 yarn dev)",
      "Bash(cat:*)",
      "Bash(yarn add:*)",
      "Bash(curl:*)",
      "Bash(sed:*)",
      "Bash(yarn start:dev)",
      "Bash(find:*)",
      "Bash(npx next:*)",
      "Bash(brew services start:*)",
      "Bash(ollama pull:*)",
      "Bash(ollama list:*)",
      "Bash(grep:*)",
      "Bash(kill:*)",
      "Bash(npm run dev:debug:*)",
      "Bash(NODE_ENV=development npm run dev)",
      "Bash(NODE_ENV=development npm run dev -- --no-turbopack)",
      "Bash(npm run dev:*)",
      "Bash(ollama search:*)",
      "Bash(ollama run:*)",
      "Bash(npm run start:dev:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(touch:*)",
      "Bash(npm run lint)",
      "Bash(sqlite3:*)",
      "Bash(python3:*)",
      "Bash(node:*)",
      "Bash(npm run:*)",
      "Bash(npm uninstall:*)",
      "Bash(yarn cleanup:db:*)",
      "Bash(chmod:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(./create-s3-frontend.sh:*)",
      "Bash(ls:*)",
      "Bash(../create-s3-frontend.sh)",
      "Bash(NEXT_PUBLIC_API_BASE_URL=http://54.251.8.169:3001 yarn build)",
      "Bash(brew install:*)",
      "Bash(pulumi:*)",
      "Bash(aws sts:*)",
      "Bash(aws ecs list-clusters:*)",
      "Bash(aws ecs list-task-definitions:*)",
      "Bash(aws ecs list-services:*)",
      "Bash(aws ecs describe-services:*)",
      "Bash(./update-ecs-service.sh:*)",
      "Bash(aws elbv2 describe-target-health:*)",
      "Bash(aws ecs list-tasks:*)",
      "Bash(aws s3api put-public-access-block:*)",
      "Bash(docker build:*)",
      "Bash(aws logs tail:*)",
      "Bash(./quick-deploy.sh)",
      "Bash(aws ecs:*)",
      "Bash(--cluster words-wall-cluster )",
      "Bash(--service words-wall-backend-service )",
      "Bash(--task-definition \"arn:aws:ecs:ap-southeast-1:216673926326:task-definition/words-wall-backend-task:18\" )",
      "Bash(--force-new-deployment)",
      "Bash(./update-task-definition.sh:*)",
      "Bash(./simple-update-task.sh:*)",
      "Bash(docker:*)",
      "Bash(export PULUMI_CONFIG_PASSPHRASE=\"\")",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi stack init production-cloud)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config set aws:region us-east-1)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config set domainName words-wall.com)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config set environment production)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi up --yes)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config rm domainName)",
      "Bash(aws route53:*)",
      "Bash(aws acm list-certificates:*)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi stack output --json)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi stack --show-urns)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi refresh --yes)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(aws secretsmanager get-secret-value:*)",
      "Bash(aws secretsmanager list-secrets:*)",
      "Bash(aws rds describe-db-instances:*)",
      "Bash(aws s3 ls:*)",
      "Bash(./infrastructure/deployment/deploy-frontend.sh:*)",
      "Bash(BUCKET_NAME=\"words-wall-production-frontend-1752535973835\")",
      "Bash(echo:*)",
      "Bash(aws s3api list-buckets:*)",
      "Bash(aws s3 sync:*)",
      "Bash(aws cloudfront get-distribution-config:*)",
      "Bash(aws cloudfront create-invalidation:*)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi stack output frontendBucketName)",
      "Bash(aws s3 mb:*)",
      "Bash(aws s3api head-bucket:*)",
      "Bash(aws configure get:*)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config set aws:region ap-southeast-1)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi config get aws:region)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi cancel)",
      "Bash(aws s3api get-bucket-policy:*)",
      "Bash(aws s3api get-bucket-location:*)",
      "Bash(aws s3api put-bucket-policy:*)",
      "Bash(aws acm describe-certificate:*)",
      "Bash(aws cloudfront:*)",
      "Bash(PULUMI_CONFIG_PASSPHRASE=\"\" pulumi stack init production-ap-southeast-1)",
      "Bash(aws elbv2 describe-load-balancers:*)",
      "Bash(aws acm request-certificate:*)",
      "Bash(aws elbv2 create-listener:*)",
      "Bash(aws elbv2 describe-listeners:*)",
      "Bash(aws ec2 describe-subnets:*)",
      "Bash(aws ec2 describe-security-groups:*)",
      "Bash(--cluster words-wall-production-cluster )",
      "Bash(--service-name words-wall-backend-service )",
      "Bash(--task-definition words-wall-backend-task:23 )",
      "Bash(--desired-count 1 )",
      "Bash(--launch-type FARGATE )",
      "Bash(--network-configuration \"awsvpcConfiguration={subnets=[subnet-0b34f8bc3d382ab20,subnet-0201a51c62c893769],securityGroups=[sg-0c800591bb744932f],assignPublicIp=ENABLED}\" )",
      "Bash(--load-balancers \"targetGroupArn=arn:aws:elasticloadbalancing:ap-southeast-1:216673926326:targetgroup/words-wall-production-backend-tg/d1a09eacde791639,containerName=words-wall-backend,containerPort=3001\" )",
      "Bash(--region ap-southeast-1)",
      "Bash(aws iam get-role:*)",
      "Bash(aws iam list-roles:*)",
      "Bash(aws elbv2 describe-target-groups:*)",
      "Bash(./infrastructure/quick-deploy.sh:*)",
      "Bash(./infrastructure/deployment/deploy-backend.sh:*)",
      "Bash(brew services stop:*)",
      "Bash(aws elbv2:*)",
      "Bash(aws logs:*)",
      "Bash(--log-group-name \"/ecs/words-wall-backend\" )",
      "Bash(--order-by LastEventTime )",
      "Bash(--descending )",
      "Bash(--max-items 1)",
      "Bash(--log-group-name \"/ecs/words-wall-backend\" )",
      "Bash(--log-stream-name \"ecs/words-wall-backend/33e0bf62929c484d9a30e2dfb645c04a\" )",
      "Bash(--start-time 1752587500000)",
      "Bash(--load-balancer-arn \"arn:aws:elasticloadbalancing:ap-southeast-1:216673926326:loadbalancer/app/words-wall-alb/5d59137e252e0a45\")",
      "Bash(--log-group-name \"/ecs/words-wall-backend\" )",
      "Bash(--log-stream-name \"ecs/words-wall-backend/33e0bf62929c484d9a30e2dfb645c04a\" )",
      "Bash(--start-time 1752589600000 )",
      "Bash(--end-time 1752589900000)",
      "Bash(aws s3api get-bucket-website:*)",
      "Bash(rg:*)",
      "Bash(cp:*)",
      "Bash(npx serve:*)",
      "Bash(yarn start)",
      "Bash(yarn dev:*)",
      "Bash(PORT=3003 yarn start:dev)",
      "Bash(aws ec2 describe-network-interfaces:*)",
      "Bash(gh run list:*)",
      "Bash(export NEXT_PUBLIC_API_BASE_URL=\"http://words-wall-production-alb-904675667.ap-southeast-1.elb.amazonaws.com\")",
      "Bash(./deployment/deploy-frontend.sh:*)",
      "Bash(aws s3 cp:*)",
      "Bash(NODE_ENV=production npm run build)",
      "WebFetch(domain:words-wall.com)",
      "Bash(git log:*)",
      "Bash(git fetch:*)",
      "Bash(NEXT_PUBLIC_API_BASE_URL=https://words-wall.com NODE_ENV=production npm run build)",
      "Bash(NEXT_PUBLIC_API_BASE_URL=https://api.words-wall.com NODE_ENV=production npm run build)"
    ],
    "deny": []
  }
}